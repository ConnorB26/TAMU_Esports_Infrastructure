version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: backend
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    networks:
      - app-network
    restart: unless-stopped

  discord_bot:
    build:
      context: ./discord_bot
      dockerfile: Dockerfile.prod
    container_name: discord_bot
    volumes:
      - ./discord_bot:/app
      - ./.env:/app/.env
    networks:
      - app-network
    depends_on:
      - backend
    restart: unless-stopped

  strapi:
    build:
      context: ./content-management-system
      dockerfile: Dockerfile.prod
    container_name: content_management_system
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      HOST: ${CMS_HOST}
      PORT: ${CMS_PORT}
      APP_KEYS: ${APP_KEYS}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_CLIENT: "postgres"
      DATABASE_NAME: ${DB_DATABASE}
      DATABASE_HOST: ${DB_HOST}
      DATABASE_PORT: ${DB_PORT}
      DATABASE_USERNAME: ${DB_USERNAME}
      DATABASE_PASSWORD: ${DB_PASSWORD}
      DATABASE_SCHEMA: ${STRAPI_DB_SCHEMA}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
    volumes:
      - ./content-management-system:/app
      - ./.env:/app/.env
    ports:
      - "1337:1337"
    networks:
      - app-network
