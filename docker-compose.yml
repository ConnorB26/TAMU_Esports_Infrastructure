version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend
    ports:
      - "3001:3001"
      - "8080:8080"
    volumes:
      - ./backend:/app
      - ./.env:/.env
    networks:
      - app-network
    depends_on:
      - postgres

  discord_bot:
    build: ./discord_bot
    container_name: discord_bot
    volumes:
      - ./discord_bot:/app
      - ./.env:/.env
    networks:
      - app-network
    depends_on:
      - backend

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - ./.env:/.env
    networks:
      - app-network

  strapi:
    build:
      context: ./content-management-system
      dockerfile: Dockerfile
    container_name: content_management_system
    image: strapi/strapi
    restart: unless-stopped
    env_file: .env
    environment:
      HOST: ${CMS_HOST}
      PORT: ${CMS_PORT}
      APP_KEYS: ${APP_KEYS}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_CLIENT: "postgres"
      DATABASE_NAME: ${DB_DATABASE}
      DATABASE_HOST: ${DB_HOST}
      DATABASE_PORT: ${DB_PORT}
      DATABASE_USERNAME: ${DB_USERNAME}
      DATABASE_PASSWORD: ${DB_PASSWORD}
      DATABASE_SCHEMA: ${STRAPI_DB_SCHEMA}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
    volumes:
      - ./content-management-system:/app
      - ./.env:/.env
    ports:
      - "1337:1337"
    networks:
      - app-network
    depends_on:
      - postgres